# ビデオビューアー アプリケーション設計書
# 1-2. ビデオビューアー
# Source: https://github.com/dai-motoki/storyboard-viewer/blob/main/storyboard_flow.html

- id: saas-storyboard
  category: 1
  category_name: アプリケーション
  title: ビデオビューアー
  content: ""
  custom_html: |
    <div style="margin-bottom: 20px;">
      <button onclick="window.location.hash=''; location.reload();" style="padding: 8px 16px; background: #4a4a4a; border: none; border-radius: 6px; color: white; cursor: pointer; font-size: 14px;">
        ← SaaS一覧に戻る
      </button>
    </div>
    <!DOCTYPE html>
    <html lang="ja">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>storyboard_flow</title>
        <style>
            body {
                margin: 0;
                padding: 0;
                font-family: Arial, sans-serif;
                background: #1a1a1a;
                overflow: hidden;
            }
            
            .storyboard-viewer {
                width: 100%;
                height: 100vh;
                display: flex;
                flex-direction: column;
            }
            
            /* Header */
            .header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 20px 30px;
                background: #2a2a2a;
                color: white;
                box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
            }
            
            .header h1 {
                margin: 0;
                font-size: 24px;
                font-weight: 600;
            }
            
            .header-controls {
                display: flex;
                gap: 15px;
                align-items: center;
            }
            
            .export-btn, .settings-btn {
                padding: 8px 16px;
                background: #4a4a4a;
                border: none;
                border-radius: 6px;
                color: white;
                cursor: pointer;
                font-size: 14px;
                transition: all 0.3s ease;
            }
            
            .export-btn:hover, .settings-btn:hover {
                background: #5a5a5a;
                transform: translateY(-1px);
            }
            
            /* Main Content Area */
            .main-content {
                flex: 1;
                display: flex;
                overflow: hidden;
            }
            
            /* Timeline */
            .timeline {
                width: 250px;
                background: #2a2a2a;
                padding: 20px;
                overflow-y: auto;
                border-right: 1px solid #3a3a3a;
            }
            
            .timeline h3 {
                color: white;
                margin: 0 0 20px 0;
                font-size: 18px;
                font-weight: 600;
            }
            
            .timeline-item {
                background: #3a3a3a;
                padding: 15px;
                margin-bottom: 10px;
                border-radius: 8px;
                cursor: pointer;
                transition: all 0.3s ease;
                position: relative;
                overflow: hidden;
            }
            
            .timeline-item:hover {
                background: #4a4a4a;
                transform: translateX(5px);
            }
            
            .timeline-item.active {
                background: #0066cc;
                box-shadow: 0 4px 15px rgba(0, 102, 204, 0.3);
            }
            
            .timeline-item.active::before {
                content: '';
                position: absolute;
                left: 0;
                top: 0;
                width: 4px;
                height: 100%;
                background: #00aaff;
            }
            
            .scene-number {
                color: #aaa;
                font-size: 12px;
                margin-bottom: 5px;
            }
            
            .timeline-item.active .scene-number {
                color: #cce6ff;
            }
            
            .scene-title {
                color: white;
                font-weight: 500;
                margin-bottom: 8px;
            }
            
            .scene-duration {
                color: #999;
                font-size: 12px;
                display: flex;
                align-items: center;
                gap: 5px;
            }
            
            .timeline-item.active .scene-duration {
                color: #cce6ff;
            }
            
            /* Viewer Area */
            .viewer-area {
                flex: 1;
                display: flex;
                flex-direction: column;
                background: #1a1a1a;
            }
            
            /* Video Container */
            .video-container {
                flex: 1;
                display: flex;
                align-items: center;
                justify-content: center;
                padding: 40px;
                position: relative;
            }
            
            .video-wrapper {
                position: relative;
                width: 100%;
                max-width: 1200px;
                aspect-ratio: 16/9;
                background: #000;
                border-radius: 12px;
                overflow: hidden;
                box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
            }
            
            video {
                width: 100%;
                height: 100%;
                object-fit: contain;
            }
            
            /* Video Overlay Info */
            .video-overlay {
                position: absolute;
                top: 20px;
                left: 20px;
                background: rgba(0, 0, 0, 0.7);
                padding: 15px 20px;
                border-radius: 8px;
                color: white;
                backdrop-filter: blur(10px);
            }
            
            .current-scene {
                font-size: 14px;
                color: #00aaff;
                margin-bottom: 5px;
            }
            
            .scene-description {
                font-size: 16px;
                font-weight: 500;
            }
            
            /* Controls Bar */
            .controls-bar {
                background: #2a2a2a;
                padding: 20px 30px;
                display: flex;
                align-items: center;
                gap: 20px;
                box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.3);
            }
            
            .play-controls {
                display: flex;
                gap: 10px;
                align-items: center;
            }
            
            .control-btn {
                width: 40px;
                height: 40px;
                background: #4a4a4a;
                border: none;
                border-radius: 50%;
                color: white;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.3s ease;
                font-size: 18px;
            }
            
            .control-btn:hover {
                background: #5a5a5a;
                transform: scale(1.1);
            }
            
            .control-btn.play-pause {
                width: 50px;
                height: 50px;
                background: #0066cc;
            }
            
            .control-btn.play-pause:hover {
                background: #0080ff;
            }
            
            /* Progress Bar */
            .progress-container {
                flex: 1;
                display: flex;
                align-items: center;
                gap: 15px;
            }
            
            .progress-bar {
                flex: 1;
                height: 6px;
                background: #3a3a3a;
                border-radius: 3px;
                position: relative;
                cursor: pointer;
                overflow: hidden;
            }
            
            .progress-bar:hover {
                height: 8px;
            }
            
            .progress-fill {
                height: 100%;
                background: #0066cc;
                width: 0%;
                transition: width 0.1s linear;
                position: relative;
            }
            
            .progress-fill::after {
                content: '';
                position: absolute;
                right: -8px;
                top: 50%;
                transform: translateY(-50%);
                width: 16px;
                height: 16px;
                background: white;
                border-radius: 50%;
                box-shadow: 0 2px 8px rgba(0, 0, 0, 0.3);
                opacity: 0;
                transition: opacity 0.3s ease;
            }
            
            .progress-bar:hover .progress-fill::after {
                opacity: 1;
            }
            
            .time-display {
                color: white;
                font-size: 14px;
                min-width: 100px;
                text-align: center;
            }
            
            /* Volume Control */
            .volume-control {
                display: flex;
                align-items: center;
                gap: 10px;
            }
            
            .volume-icon {
                width: 30px;
                height: 30px;
                background: #4a4a4a;
                border: none;
                border-radius: 6px;
                color: white;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
            }
            
            .volume-slider {
                width: 80px;
                height: 6px;
                background: #3a3a3a;
                border-radius: 3px;
                position: relative;
                cursor: pointer;
            }
            
            .volume-fill {
                height: 100%;
                background: #0066cc;
                width: 70%;
                border-radius: 3px;
            }
            
            /* Fullscreen Button */
            .fullscreen-btn {
                width: 35px;
                height: 35px;
                background: #4a4a4a;
                border: none;
                border-radius: 6px;
                color: white;
                cursor: pointer;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.3s ease;
            }
            
            .fullscreen-btn:hover {
                background: #5a5a5a;
                transform: scale(1.1);
            }
            
            /* Scene Markers on Progress Bar */
            .scene-markers {
                position: absolute;
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                pointer-events: none;
            }
            
            .scene-marker {
                position: absolute;
                top: 0;
                width: 2px;
                height: 100%;
                background: rgba(255, 255, 255, 0.3);
            }
            
            /* Responsive Design */
            @media (max-width: 768px) {
                .timeline {
                    width: 200px;
                }
                
                .video-container {
                    padding: 20px;
                }
                
                .header {
                    padding: 15px 20px;
                }
                
                .controls-bar {
                    padding: 15px 20px;
                }
                
                .volume-control {
                    display: none;
                }
            }
            
            /* Loading State */
            .loading-spinner {
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
                width: 50px;
                height: 50px;
                border: 3px solid #3a3a3a;
                border-top-color: #0066cc;
                border-radius: 50%;
                animation: spin 1s linear infinite;
                display: none;
            }
            
            @keyframes spin {
                to {
                    transform: translate(-50%, -50%) rotate(360deg);
                }
            }
            
            .loading .loading-spinner {
                display: block;
            }
            
            /* Tooltips */
            .tooltip {
                position: absolute;
                background: rgba(0, 0, 0, 0.9);
                color: white;
                padding: 8px 12px;
                border-radius: 6px;
                font-size: 12px;
                pointer-events: none;
                opacity: 0;
                transition: opacity 0.3s ease;
                white-space: nowrap;
                z-index: 1000;
            }
            
            .tooltip.show {
                opacity: 1;
            }
        </style>
    </head>
    <body>
        <div class="storyboard-viewer">
            <!-- Header -->
            <div class="header">
                <h1>Storyboard Viewer</h1>
                <div class="header-controls">
                    <button class="export-btn">📥 Export</button>
                    <button class="settings-btn">⚙️ Settings</button>
                </div>
            </div>
            
            <!-- Main Content -->
            <div class="main-content">
                <!-- Timeline -->
                <div class="timeline">
                    <h3>Scenes</h3>
                    <div class="timeline-item active">
                        <div class="scene-number">Scene 01</div>
                        <div class="scene-title">Opening Shot</div>
                        <div class="scene-duration">⏱️ 0:00 - 0:15</div>
                    </div>
                    <div class="timeline-item">
                        <div class="scene-number">Scene 02</div>
                        <div class="scene-title">Character Introduction</div>
                        <div class="scene-duration">⏱️ 0:15 - 0:45</div>
                    </div>
                    <div class="timeline-item">
                        <div class="scene-number">Scene 03</div>
                        <div class="scene-title">Action Sequence</div>
                        <div class="scene-duration">⏱️ 0:45 - 1:30</div>
                    </div>
                    <div class="timeline-item">
                        <div class="scene-number">Scene 04</div>
                        <div class="scene-title">Dialogue Scene</div>
                        <div class="scene-duration">⏱️ 1:30 - 2:15</div>
                    </div>
                    <div class="timeline-item">
                        <div class="scene-number">Scene 05</div>
                        <div class="scene-title">Climax</div>
                        <div class="scene-duration">⏱️ 2:15 - 3:00</div>
                    </div>
                    <div class="timeline-item">
                        <div class="scene-number">Scene 06</div>
                        <div class="scene-title">Resolution</div>
                        <div class="scene-duration">⏱️ 3:00 - 3:30</div>
                    </div>
                </div>
                
                <!-- Viewer Area -->
                <div class="viewer-area">
                    <div class="video-container">
                        <div class="video-wrapper">
                            <video id="storyboardVideo" src="/images/karate-woman-man-v2.mp4"></video>
                            <div class="loading-spinner"></div>
                            <div class="video-overlay">
                                <div class="current-scene">Scene 01</div>
                                <div class="scene-description">Opening Shot</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Controls Bar -->
                    <div class="controls-bar">
                        <div class="play-controls">
                            <button class="control-btn" id="prevBtn">⏮️</button>
                            <button class="control-btn play-pause" id="playPauseBtn">▶️</button>
                            <button class="control-btn" id="nextBtn">⏭️</button>
                        </div>
                        
                        <div class="progress-container">
                            <div class="progress-bar" id="progressBar">
                                <div class="progress-fill" id="progressFill"></div>
                                <div class="scene-markers">
                                    <div class="scene-marker" style="left: 8.3%"></div>
                                    <div class="scene-marker" style="left: 25%"></div>
                                    <div class="scene-marker" style="left: 41.7%"></div>
                                    <div class="scene-marker" style="left: 62.5%"></div>
                                    <div class="scene-marker" style="left: 83.3%"></div>
                                </div>
                            </div>
                            <div class="time-display">
                                <span id="currentTime">0:00</span> / <span id="totalTime">3:30</span>
                            </div>
                        </div>
                        
                        <div class="volume-control">
                            <button class="volume-icon">🔊</button>
                            <div class="volume-slider">
                                <div class="volume-fill"></div>
                            </div>
                        </div>
                        
                        <button class="fullscreen-btn" id="fullscreenBtn">⛶</button>
                    </div>
                </div>
            </div>
        </div>
        
        <script>
            // Video element and controls
            const video = document.getElementById('storyboardVideo');
            const playPauseBtn = document.getElementById('playPauseBtn');
            const prevBtn = document.getElementById('prevBtn');
            const nextBtn = document.getElementById('nextBtn');
            const progressBar = document.getElementById('progressBar');
            const progressFill = document.getElementById('progressFill');
            const currentTimeEl = document.getElementById('currentTime');
            const totalTimeEl = document.getElementById('totalTime');
            const fullscreenBtn = document.getElementById('fullscreenBtn');
            
            // Scene data
            const scenes = [
                { id: 1, title: 'Opening Shot', start: 0, end: 15 },
                { id: 2, title: 'Character Introduction', start: 15, end: 45 },
                { id: 3, title: 'Action Sequence', start: 45, end: 90 },
                { id: 4, title: 'Dialogue Scene', start: 90, end: 135 },
                { id: 5, title: 'Climax', start: 135, end: 180 },
                { id: 6, title: 'Resolution', start: 180, end: 210 }
            ];
            
            let currentSceneIndex = 0;
            
            // Format time helper
            function formatTime(seconds) {
                const mins = Math.floor(seconds / 60);
                const secs = Math.floor(seconds % 60);
                return `${mins}:${secs.toString().padStart(2, '0')}`;
            }
            
            // Update time display
            function updateTimeDisplay() {
                currentTimeEl.textContent = formatTime(video.currentTime);
                totalTimeEl.textContent = formatTime(video.duration || 210);
            }
            
            // Update progress bar
            function updateProgress() {
                const progress = (video.currentTime / video.duration) * 100;
                progressFill.style.width = progress + '%';
                updateTimeDisplay();
                updateActiveScene();
            }
            
            // Update active scene
            function updateActiveScene() {
                const currentTime = video.currentTime;
                let activeIndex = 0;
                
                for (let i = 0; i < scenes.length; i++) {
                    if (currentTime >= scenes[i].start && currentTime < scenes[i].end) {
                        activeIndex = i;
                        break;
                    }
                }
                
                if (activeIndex !== currentSceneIndex) {
                    currentSceneIndex = activeIndex;
                    updateSceneUI();
                }
            }
            
            // Update scene UI
            function updateSceneUI() {
                // Update timeline items
                const timelineItems = document.querySelectorAll('.timeline-item');
                timelineItems.forEach((item, index) => {
                    if (index === currentSceneIndex) {
                        item.classList.add('active');
                    } else {
                        item.classList.remove('active');
                    }
                });
                
                // Update overlay
                const currentScene = scenes[currentSceneIndex];
                document.querySelector('.current-scene').textContent = `Scene 0${currentScene.id}`;
                document.querySelector('.scene-description').textContent = currentScene.title;
            }
            
            // Play/Pause functionality
            playPauseBtn.addEventListener('click', () => {
                if (video.paused) {
                    video.play();
                    playPauseBtn.textContent = '⏸️';
                } else {
                    video.pause();
                    playPauseBtn.textContent = '▶️';
                }
            });
            
            // Previous scene
            prevBtn.addEventListener('click', () => {
                if (currentSceneIndex > 0) {
                    currentSceneIndex--;
                    video.currentTime = scenes[currentSceneIndex].start;
                    updateSceneUI();
                }
            });
            
            // Next scene
            nextBtn.addEventListener('click', () => {
                if (currentSceneIndex < scenes.length - 1) {
                    currentSceneIndex++;
                    video.currentTime = scenes[currentSceneIndex].start;
                    updateSceneUI();
                }
            });
            
            // Progress bar click
            progressBar.addEventListener('click', (e) => {
                const rect = progressBar.getBoundingClientRect();
                const pos = (e.clientX - rect.left) / rect.width;
                video.currentTime = pos * video.duration;
            });
            
            // Timeline item click
            document.querySelectorAll('.timeline-item').forEach((item, index) => {
                item.addEventListener('click', () => {
                    currentSceneIndex = index;
                    video.currentTime = scenes[index].start;
                    updateSceneUI();
                });
            });
            
            // Fullscreen
            fullscreenBtn.addEventListener('click', () => {
                if (!document.fullscreenElement) {
                    document.querySelector('.storyboard-viewer').requestFullscreen();
                } else {
                    document.exitFullscreen();
                }
            });
            
            // Video events
            video.addEventListener('timeupdate', updateProgress);
            video.addEventListener('loadedmetadata', updateTimeDisplay);
            
            // Initialize
            updateSceneUI();
            updateTimeDisplay();
        </script>
    </body>
    </html>
