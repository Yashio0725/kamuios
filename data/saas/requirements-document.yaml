# 要件定義書
# KAMUI CODE プラットフォームの要件定義書

- id: requirements-document
  category: 2
  category_name: 要件定義・開発
  title: 要件定義書
  content: |
    KAMUI CODE プラットフォームの包括的な要件定義書です。システム要件、デザイン要件、技術仕様、開発計画を網羅しています。
  
  # プロジェクト概要セクション
  custom_html: |
    <style>
      .requirement-doc {
        background: var(--card);
        border: 1px solid var(--border);
        border-radius: 12px;
        padding: 24px;
        margin-bottom: 20px;
      }
      .requirement-header {
        border-bottom: 2px solid var(--border);
        padding-bottom: 16px;
        margin-bottom: 24px;
      }
      .requirement-title {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--text);
        margin-bottom: 8px;
      }
      .requirement-meta {
        display: flex;
        gap: 20px;
        font-size: 0.9rem;
        color: var(--text-weak);
      }
      .requirement-section {
        margin-bottom: 24px;
      }
      .requirement-section h3 {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--link);
        margin-bottom: 12px;
      }
      .requirement-section h4 {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text);
        margin-bottom: 8px;
      }
      .requirement-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 12px;
      }
      .requirement-table th,
      .requirement-table td {
        border: 1px solid var(--border);
        padding: 10px;
        text-align: left;
      }
      .requirement-table th {
        background: var(--sidebar-bg);
        font-weight: 600;
        color: var(--text);
      }
      .requirement-table td {
        color: var(--text-weak);
      }
      .requirement-list {
        list-style: none;
        padding-left: 0;
      }
      .requirement-list li {
        padding: 8px 0;
        display: flex;
        align-items: flex-start;
      }
      .requirement-list li::before {
        content: "•";
        color: var(--link);
        font-weight: 700;
        margin-right: 12px;
        font-size: 1.2rem;
      }
    </style>
    
    <div class="requirement-doc">
      <div class="requirement-header">
        <h2 class="requirement-title">KAMUI CODE プラットフォーム 要件定義書</h2>
        <div class="requirement-meta">
          <span>バージョン: 2.0</span>
          <span>更新日: 2025年9月</span>
          <span>ステータス: レビュー中</span>
        </div>
      </div>
      
      <div class="requirement-section">
        <h3>1. プロジェクト概要</h3>
        <p>KAMUI CODE は、MCP（Model Context Protocol）に準拠した複数のサーバー群を統合的に提供するプラットフォームです。クリエイティブ、開発、ビジネスの3領域を横断し、AIを活用した画像生成、ビデオ編集、コード生成、文書作成など、あらゆるデジタルコンテンツ制作を一つの環境で完結できるシステムを構築します。</p>
      </div>
      
      <div class="requirement-section">
        <h3>2. システム要件</h3>
        
        <h4>2.1 機能要件</h4>
        <table class="requirement-table">
          <thead>
            <tr>
              <th style="width: 20%">機能ID</th>
              <th style="width: 30%">機能名</th>
              <th style="width: 50%">説明</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>FR-001</td>
              <td>テキスト→画像生成 (T2I)</td>
              <td>プロンプトから高品質な画像を生成（Flux, SDXL, Dalle-3対応）</td>
            </tr>
            <tr>
              <td>FR-002</td>
              <td>画像→画像変換 (I2I)</td>
              <td>既存画像の編集・スタイル変換・高解像度化機能</td>
            </tr>
            <tr>
              <td>FR-003</td>
              <td>テキスト→動画生成 (T2V)</td>
              <td>プロンプトから動画を生成（GenVideo, HaiperAI対応）</td>
            </tr>
            <tr>
              <td>FR-004</td>
              <td>MCPサーバー統合</td>
              <td>クリエイティブ/開発/ビジネス領域の統合API管理</td>
            </tr>
            <tr>
              <td>FR-005</td>
              <td>要件定義書生成</td>
              <td>プロジェクト要件の自動生成・管理機能</td>
            </tr>
            <tr>
              <td>FR-006</td>
              <td>ストーリーボード作成</td>
              <td>ビジュアルストーリーテリング支援機能</td>
            </tr>
          </tbody>
        </table>
        
        <h4>2.2 非機能要件</h4>
        <ul class="requirement-list">
          <li><strong>パフォーマンス:</strong> 画像生成は5秒以内、UI操作のレスポンスは100ms以内</li>
          <li><strong>可用性:</strong> 99.9%以上のアップタイム</li>
          <li><strong>セキュリティ:</strong> HTTPS通信、認証・認可機能の実装</li>
          <li><strong>互換性:</strong> Chrome, Firefox, Safari, Edgeの最新版をサポート</li>
          <li><strong>スケーラビリティ:</strong> 同時接続ユーザー1000人以上に対応</li>
        </ul>
      </div>
      
      <div class="requirement-section">
        <h3>3. 技術スタック</h3>
        <table class="requirement-table">
          <thead>
            <tr>
              <th>カテゴリ</th>
              <th>技術</th>
              <th>用途</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>フロントエンド</td>
              <td>React, TypeScript</td>
              <td>UIコンポーネントの実装</td>
            </tr>
            <tr>
              <td>スタイリング</td>
              <td>CSS Modules, Tailwind CSS</td>
              <td>レスポンシブデザインの実現</td>
            </tr>
            <tr>
              <td>状態管理</td>
              <td>Redux Toolkit</td>
              <td>アプリケーション状態の管理</td>
            </tr>
            <tr>
              <td>AI/ML</td>
              <td>Stable Diffusion API</td>
              <td>画像生成機能の実装</td>
            </tr>
            <tr>
              <td>ビルドツール</td>
              <td>Vite</td>
              <td>高速な開発環境の構築</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <div class="requirement-section">
        <h3>4. 開発スケジュール</h3>
        <table class="requirement-table">
          <thead>
            <tr>
              <th>フェーズ</th>
              <th>期間</th>
              <th>主な成果物</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td>要件定義</td>
              <td>2週間</td>
              <td>要件定義書、画面設計書</td>
            </tr>
            <tr>
              <td>基本設計</td>
              <td>3週間</td>
              <td>システム設計書、API仕様書</td>
            </tr>
            <tr>
              <td>実装</td>
              <td>8週間</td>
              <td>ソースコード、単体テスト</td>
            </tr>
            <tr>
              <td>テスト</td>
              <td>3週間</td>
              <td>結合テスト、受入テスト</td>
            </tr>
            <tr>
              <td>リリース</td>
              <td>1週間</td>
              <td>本番環境構築、運用手順書</td>
            </tr>
          </tbody>
        </table>
      </div>
      
      <div class="requirement-section">
        <h3>5. 制約事項</h3>
        <ul class="requirement-list">
          <li>AI画像生成のAPIには利用制限があるため、ユーザーごとに生成回数を制限する</li>
          <li>動画ファイルのアップロードサイズは500MBまでとする</li>
          <li>初期リリースでは日本語のみ対応とし、多言語対応は次期バージョンで検討</li>
          <li>MCPプロトコル準拠のため、JSON-RPC 2.0形式での通信が必須</li>
        </ul>
      </div>
    </div>
  
  # デザイン要件セクション
  design_specs:
    colors:
      - group: ダークテーマ
        swatches:
          - name: 背景
            color: "#1a1a1a"
            label: bg
          - name: テキスト
            color: "#ffffff"
            label: text
          - name: ボーダー
            color: "#2a2a2a"
            label: border
          - name: リンク
            color: "#4a9eff"
            label: link
      - group: ライトテーマ
        swatches:
          - name: 背景
            color: "#f7f7f8"
            label: bg
            light: true
          - name: テキスト
            color: "#1a1a1a"
            label: text
            light: true
          - name: ボーダー
            color: "#e4e4e7"
            label: border
            light: true
          - name: リンク
            color: "#2563eb"
            label: link
            light: true
    categories:
      - name: クリエイティブ
        class: creative
        gradient: "linear-gradient(135deg, #8B5CF6 0%, #EC4899 50%, #FB923C 100%)"
        description: 画像・動画・音楽生成
        colors:
          - "#8B5CF6"
          - "#EC4899"
          - "#FB923C"
      - name: 開発
        class: development
        gradient: "linear-gradient(135deg, #3B82F6 0%, #06B6D4 50%, #10B981 100%)"
        description: コード生成・分析・デバッグ
        colors:
          - "#3B82F6"
          - "#06B6D4"
          - "#10B981"
      - name: ビジネス
        class: business
        gradient: "linear-gradient(135deg, #10B981 0%, #14B8A6 50%, #06B6D4 100%)"
        description: 翻訳・要約・レポート
        colors:
          - "#10B981"
          - "#14B8A6"
          - "#06B6D4"
    typography:
      - label: メインタイトル
        sample: "KAMUI CODE ドキュメント"
        spec: "font-size: 1.6rem; font-weight: 700;"
      - label: セクションヘッダー
        sample: "1. 概要"
        spec: "font-size: 1.1rem; font-weight: 600;"
      - label: 本文
        sample: "KAMUI CODE は、MCP（Model Context Protocol）に準拠した複数のサーバー群を統合的に提供します。"
        spec: "font-size: 0.95rem; line-height: 1.7;"
      - label: コード
        sample: "const result = await api.generate({ prompt: 'hello' });"
        spec: "font-family: ui-monospace, monospace; font-size: 0.85rem;"
    layout:
      - サイドバー幅: 280px
      - メインコンテンツパディング: 24px
      - カード間隔: 18px
      - ボーダーラジウス: 8px～16px
    interaction:
      - ホバーエフェクト: 背景色変化、translateY(-2px)
      - トランジション: all 0.2s ease
      - スクロールビヘイビア: smooth
      - モーダル背景: rgba(0,0,0,0.6)
    responsive:
      - ブレークポイント: 768px
      - モバイルサイドバー: スライド式
      - グリッド調整: 3列 → 2列 → 1列
      - タッチ対応: タップ操作最適化
  
  # MCPプロトコル準拠の設定例
  code:
    language: json
    content: |
      {
        "mcpServers": {
          "kamui-creative": {
            "command": "npx",
            "args": ["@kamui/mcp-creative"],
            "env": {
              "API_KEY": "YOUR_CREATIVE_API_KEY"
            }
          },
          "kamui-dev": {
            "command": "npx",
            "args": ["@kamui/mcp-dev"],
            "env": {
              "API_KEY": "YOUR_DEV_API_KEY"
            }
          },
          "kamui-business": {
            "command": "npx",
            "args": ["@kamui/mcp-business"],
            "env": {
              "API_KEY": "YOUR_BUSINESS_API_KEY"
            }
          }
        }
      }
  
  # アーキテクチャ図
  mermaid: |
    graph TD
      A[KAMUI CODE Platform] --> B[Creative Category]
      A --> C[Development Category]
      A --> D[Business Category]
      
      B --> B1[Text→Image<br/>T2I]
      B --> B2[Image→Image<br/>I2I]
      B --> B3[Text→Video<br/>T2V]
      B --> B4[Video→Video<br/>V2V]
      
      C --> C1[Code Generation]
      C --> C2[Code Analysis]
      C --> C3[Debugging]
      C --> C4[Documentation]
      
      D --> D1[Translation]
      D --> D2[Summarization]
      D --> D3[Report Generation]
      D --> D4[Requirement Docs]
      
      style A fill:#8B5CF6,stroke:#fff,stroke-width:2px,color:#fff
      style B fill:#EC4899,stroke:#fff,stroke-width:2px,color:#fff
      style C fill:#3B82F6,stroke:#fff,stroke-width:2px,color:#fff
      style D fill:#10B981,stroke:#fff,stroke-width:2px,color:#fff
  
  # ガントチャート
  gantt: |
    gantt
      title KAMUI CODE 開発スケジュール
      dateFormat YYYY-MM-DD
      section フェーズ1
      要件定義 :done, req, 2025-01-01, 14d
      基本設計 :done, design, after req, 21d
      詳細設計 :active, detail, after design, 14d
      section フェーズ2
      MCPサーバー実装 :impl1, after detail, 30d
      フロントエンド実装 :impl2, after detail, 45d
      統合テスト :test, after impl1, 21d
      section フェーズ3
      性能調整 :perf, after test, 14d
      デプロイ準備 :deploy, after perf, 7d
      本番リリース :milestone, after deploy, 0d
  
  # 追加のドキュメント
  additional_content: |
    ## 6. API仕様
    
    ### エンドポイント構造
    ```
    https://{BASE_URL}/{category}/{vendor}/{model}/{mode}
    ```
    
    ### カテゴリ別エンドポイント例
    - **画像生成**: `{BASE_URL}/t2i/fal/flux/ultra`
    - **動画生成**: `{BASE_URL}/t2v/fal/haiper/standard`
    - **コード生成**: `{BASE_URL}/code/github/copilot/completion`
    - **要件定義**: `{BASE_URL}/requirement/kamui/generator`
    
    ## 7. セキュリティ要件
    
    - **認証方式**: Bearer Token (JWT)
    - **通信暗号化**: TLS 1.3以上
    - **APIレート制限**: 100リクエスト/分 (ユーザー単位)
    - **データ保護**: 個人情報のハッシュ化、定期的な監査ログ
  
  # クライアント実装例
  client_samples:
    - id: client-javascript
      title: JavaScript/TypeScript実装例
    - id: client-python
      title: Python実装例
    - id: client-claude
      title: Claude Desktop実装例
    - id: client-cursor
      title: Cursor IDE実装例
